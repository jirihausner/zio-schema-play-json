name: CI
env:
  JDK_JAVA_OPTIONS: -XX:+PrintCommandLineFlags -Xms6G -Xmx6G -Xss4M -XX:+UseG1GC
  NODE_OPTIONS: --max_old_space_size=6144
on:
  pull_request:
  push:
    branches: ['main']
  release:
    types:
      - published
      - edited
jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Scala and Java
        uses: coursier/setup-action@v1
        with:
          apps: sbt
      - name: Cache scala dependencies
        uses: coursier/cache-action@v6
      - name: Lint code
        run: sbt lint
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    strategy:
      fail-fast: false
      matrix:
        java: ['temurin:11', 'temurin:17', 'temurin:21']
        scala: ['2.12.20', '2.13.16', '3.5.2']
        platform: ['JVM', 'JS']
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: coursier/setup-action@v1
      with:
        apps: sbt
        jvm: ${{ matrix.java }}
    - name: Cache scala dependencies
      uses: coursier/cache-action@v6
    - name: Run tests
      run: sbt ++${{ matrix.scala }}! test${{ matrix.platform }}
  mima_check:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 300
      - name: Fetch tags
        run: git fetch --depth=300 origin +refs/tags/*:refs/tags/*
      - uses: coursier/setup-action@v1
        with:
          jvm: temurin:21
          apps: sbt
      - run: sbt +mimaReportBinaryIssues
  ci:
    runs-on: ubuntu-latest
    needs: [build,lint]
    steps:
      - run: echo "All checks passed"
  publish:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    needs: [build,lint] #,mima_check]
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Scala and Java
        uses: coursier/setup-action@v1
        with:
          apps: sbt
      - name: Run release
        run: sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
